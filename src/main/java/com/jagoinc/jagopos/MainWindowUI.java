package com.jagoinc.jagopos;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author jago
 */
public class MainWindowUI extends javax.swing.JFrame {
    public Session _mainSession;
    private Object[] productCols = {"UPC", "Description", "Stock", "Price"};
    private Object[] cartCols = {"Description", "Qty", "Price"};
    private Object[] customerCols = {"ID", "Name", "Zip Code"};
    
    private DefaultTableModel searchProductTableModel = new DefaultTableModel(productCols, 0);
    private DefaultTableModel shoppingCartModel = new DefaultTableModel(cartCols, 0);
    private DefaultTableModel searchCustomerTableModel = new DefaultTableModel(customerCols, 0);
    private String _currencySymbol;
    private final NumberFormat dollarAmountFormatter = new DecimalFormat("#0.00");     

    
    
    /**
     * Creates new form MainWindowUI
     * @throws java.io.IOException
     */
    public MainWindowUI() throws IOException, ClassNotFoundException{
        this._mainSession = new Session();
        initComponents();
        this.setTitle("JagoPOS");
        
        storeInfoTextLabel.setText("<html><font size=\"16pt\"><u><b>This Store:</b></u><br />"+_mainSession.getName()+"<br />"+_mainSession.getAddress()+"<br />"+_mainSession.getPhone()+"<br /><br />"+_mainSession.getWebsite()+" | "+_mainSession.getEmail()+"</font><html>");
        addCustomerGuestButton.setEnabled(false);
        addToCartButton.setEnabled(false);
        editItemButton.setEnabled(false);
        removeFromCartButton.setEnabled(false);
        invoiceSearchRadioButton.setEnabled(false);
        attachCustomerButton.setEnabled(false);
        editCustomerButton.setEnabled(false);
        clearCustomerButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchSelectorButtonGroup = new javax.swing.ButtonGroup();
        CheckOutButton = new javax.swing.JButton();
        NewSaleButton = new javax.swing.JButton();
        JagoPOSHeader = new javax.swing.JLabel();
        SettingsButton = new javax.swing.JButton();
        NewProductButton = new javax.swing.JButton();
        customerTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        customerNameLargeHeading = new javax.swing.JLabel();
        optionalTextLabel = new javax.swing.JLabel();
        guestAddCustomerNameTextField = new javax.swing.JTextField();
        nameCustomerAddTextLabel = new javax.swing.JLabel();
        phoneCustomerAddTextLabel = new javax.swing.JLabel();
        phoneNumberAddCustomerTextField = new javax.swing.JTextField();
        addCustomerGuestButton = new javax.swing.JButton();
        guestReminderTextLabel = new javax.swing.JLabel();
        clearCustomerButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        customerSearchTextField = new javax.swing.JTextField();
        customerSearchButton = new javax.swing.JButton();
        attachCustomerButton = new javax.swing.JButton();
        editCustomerButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        customerSearchTable = new javax.swing.JTable();
        centralSearchPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainSearchTable = new javax.swing.JTable();
        itemSearchBarTextField = new javax.swing.JTextField();
        SearchDatabaseButton = new javax.swing.JButton();
        searchTextLabel = new javax.swing.JLabel();
        ProductSearchRadioButton = new javax.swing.JRadioButton();
        invoiceSearchRadioButton = new javax.swing.JRadioButton();
        WithSelectedItemsLabel = new javax.swing.JLabel();
        addToCartButton = new javax.swing.JButton();
        editItemButton = new javax.swing.JButton();
        shoppingCartPanel = new javax.swing.JPanel();
        removeFromCartButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        shoppingCartTable = new javax.swing.JTable();
        ShoppingCartLabel = new javax.swing.JLabel();
        totalDiscountLabel = new javax.swing.JLabel();
        subtotalLabel = new javax.swing.JLabel();
        taxAmountLabel = new javax.swing.JLabel();
        ExitButton = new javax.swing.JButton();
        grandTotalTextLabel = new javax.swing.JLabel();
        totalAfterTaxLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        storeInfoTextLabel = new javax.swing.JLabel();
        clockPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CheckOutButton.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        CheckOutButton.setForeground(new java.awt.Color(0, 153, 0));
        CheckOutButton.setText("CHECK OUT");
        CheckOutButton.setMaximumSize(new java.awt.Dimension(147, 31));
        CheckOutButton.setMinimumSize(new java.awt.Dimension(147, 31));
        CheckOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckOutButtonActionPerformed(evt);
            }
        });

        NewSaleButton.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        NewSaleButton.setForeground(new java.awt.Color(51, 51, 51));
        NewSaleButton.setText("NEW SALE");
        NewSaleButton.setMaximumSize(new java.awt.Dimension(146, 31));
        NewSaleButton.setMinimumSize(new java.awt.Dimension(146, 31));
        NewSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewSaleButtonActionPerformed(evt);
            }
        });

        JagoPOSHeader.setFont(new java.awt.Font("Lucida Grande", 3, 58)); // NOI18N
        JagoPOSHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JagoPOSHeader.setText("Jago POS");

        SettingsButton.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        SettingsButton.setText("Settings");
        SettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsButtonActionPerformed(evt);
            }
        });

        NewProductButton.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        NewProductButton.setForeground(new java.awt.Color(51, 102, 255));
        NewProductButton.setText("NEW PRODUCT");
        NewProductButton.setPreferredSize(new java.awt.Dimension(170, 39));
        NewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewProductButtonActionPerformed(evt);
            }
        });

        customerTabbedPane.setName("Guest"); // NOI18N
        customerTabbedPane.setOpaque(true);

        customerNameLargeHeading.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        customerNameLargeHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customerNameLargeHeading.setText("Guest");

        optionalTextLabel.setForeground(new java.awt.Color(153, 153, 153));
        optionalTextLabel.setText("Optional");

        guestAddCustomerNameTextField.setName("Does"); // NOI18N
        guestAddCustomerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestAddCustomerNameTextFieldActionPerformed(evt);
            }
        });
        guestAddCustomerNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guestAddCustomerNameTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                guestAddCustomerNameTextFieldKeyReleased(evt);
            }
        });

        nameCustomerAddTextLabel.setText("Name:");

        phoneCustomerAddTextLabel.setText("Phone #:");

        phoneNumberAddCustomerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberAddCustomerTextFieldActionPerformed(evt);
            }
        });
        phoneNumberAddCustomerTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneNumberAddCustomerTextFieldKeyPressed(evt);
            }
        });

        addCustomerGuestButton.setText("Add Customer");
        addCustomerGuestButton.setActionCommand("Add Customeer");
        addCustomerGuestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerGuestButtonActionPerformed(evt);
            }
        });

        guestReminderTextLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        guestReminderTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guestReminderTextLabel.setText("Always Thank Customers For Their Business!");
        guestReminderTextLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        clearCustomerButton.setText("Clear Customer");
        clearCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCustomerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customerNameLargeHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestReminderTextLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameCustomerAddTextLabel)
                            .addComponent(phoneCustomerAddTextLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneNumberAddCustomerTextField)
                            .addComponent(guestAddCustomerNameTextField)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addCustomerGuestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(optionalTextLabel)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(clearCustomerButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerNameLargeHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guestReminderTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(clearCustomerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestAddCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameCustomerAddTextLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneCustomerAddTextLabel)
                    .addComponent(phoneNumberAddCustomerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCustomerGuestButton)
                    .addComponent(optionalTextLabel))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        customerTabbedPane.addTab("Guest", jPanel1);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Customer Lookup");

        customerSearchTextField.setText("Customer Search...");
        customerSearchTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerSearchTextFieldMouseClicked(evt);
            }
        });
        customerSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchTextFieldActionPerformed(evt);
            }
        });
        customerSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerSearchTextFieldKeyTyped(evt);
            }
        });

        customerSearchButton.setText("Search");
        customerSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchButtonActionPerformed(evt);
            }
        });

        attachCustomerButton.setText("Attach Customer");
        attachCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachCustomerButtonActionPerformed(evt);
            }
        });

        editCustomerButton.setText("Edit");
        editCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCustomerButtonActionPerformed(evt);
            }
        });

        customerSearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Postal Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(customerSearchTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(attachCustomerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editCustomerButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(customerSearchTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attachCustomerButton)
                    .addComponent(editCustomerButton))
                .addContainerGap())
        );

        customerTabbedPane.addTab("Customer Lookup", jPanel2);

        mainSearchTable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        mainSearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UPC", "Description", "Stock", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainSearchTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        mainSearchTable.setRowHeight(31);
        mainSearchTable.setRowMargin(0);
        mainSearchTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(mainSearchTable);
        mainSearchTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (mainSearchTable.getColumnModel().getColumnCount() > 0) {
            mainSearchTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            mainSearchTable.getColumnModel().getColumn(1).setPreferredWidth(60);
            mainSearchTable.getColumnModel().getColumn(2).setPreferredWidth(5);
            mainSearchTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        itemSearchBarTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        itemSearchBarTextField.setText("Product Search...");
        itemSearchBarTextField.setToolTipText("Type here to search...");
        itemSearchBarTextField.setActionCommand("<Not Set>");
        itemSearchBarTextField.setMixingCutoutShape(null);
        itemSearchBarTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemSearchBarTextFieldMouseClicked(evt);
            }
        });
        itemSearchBarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchBarTextFieldActionPerformed(evt);
            }
        });
        itemSearchBarTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemSearchBarTextFieldKeyTyped(evt);
            }
        });

        SearchDatabaseButton.setLabel("Search");
        SearchDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDatabaseButtonActionPerformed(evt);
            }
        });

        searchTextLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        searchTextLabel.setText("SEARCH:");

        SearchSelectorButtonGroup.add(ProductSearchRadioButton);
        ProductSearchRadioButton.setSelected(true);
        ProductSearchRadioButton.setText("Products");
        ProductSearchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductSearchRadioButtonActionPerformed(evt);
            }
        });

        SearchSelectorButtonGroup.add(invoiceSearchRadioButton);
        invoiceSearchRadioButton.setText("Invoices");
        invoiceSearchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceSearchRadioButtonActionPerformed(evt);
            }
        });

        WithSelectedItemsLabel.setText("With Selected Items -> -> -> -> -> -> -> -> -> -> -> ->");
        WithSelectedItemsLabel.setToolTipText("");

        addToCartButton.setText("Add to Cart");
        addToCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartButtonActionPerformed(evt);
            }
        });

        editItemButton.setText("Edit");
        editItemButton.setToolTipText("");
        editItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout centralSearchPanelLayout = new javax.swing.GroupLayout(centralSearchPanel);
        centralSearchPanel.setLayout(centralSearchPanelLayout);
        centralSearchPanelLayout.setHorizontalGroup(
            centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centralSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centralSearchPanelLayout.createSequentialGroup()
                        .addComponent(WithSelectedItemsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addToCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editItemButton))
                    .addComponent(jScrollPane2)
                    .addGroup(centralSearchPanelLayout.createSequentialGroup()
                        .addComponent(itemSearchBarTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(centralSearchPanelLayout.createSequentialGroup()
                        .addComponent(searchTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProductSearchRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invoiceSearchRadioButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        centralSearchPanelLayout.setVerticalGroup(
            centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centralSearchPanelLayout.createSequentialGroup()
                .addGroup(centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextLabel)
                    .addComponent(ProductSearchRadioButton)
                    .addComponent(invoiceSearchRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemSearchBarTextField)
                    .addComponent(SearchDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(centralSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addToCartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(WithSelectedItemsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(editItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        removeFromCartButton.setText("Remove From Cart");
        removeFromCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromCartButtonActionPerformed(evt);
            }
        });

        shoppingCartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Description", "Qty", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shoppingCartTable.setShowHorizontalLines(false);
        jScrollPane3.setViewportView(shoppingCartTable);

        ShoppingCartLabel.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        ShoppingCartLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ShoppingCartLabel.setText(" SHOPPING CART:");

        totalDiscountLabel.setText("$0.00");

        subtotalLabel.setText("$0.00");

        taxAmountLabel.setText("$0.00");

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        grandTotalTextLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        grandTotalTextLabel.setText("Grand Total:");

        totalAfterTaxLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        totalAfterTaxLabel.setText("$0.00");

        jLabel8.setText("Subtotal:");

        jLabel9.setText("Discounts:");

        jLabel10.setText("Tax:");

        javax.swing.GroupLayout shoppingCartPanelLayout = new javax.swing.GroupLayout(shoppingCartPanel);
        shoppingCartPanel.setLayout(shoppingCartPanelLayout);
        shoppingCartPanelLayout.setHorizontalGroup(
            shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shoppingCartPanelLayout.createSequentialGroup()
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShoppingCartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addGroup(shoppingCartPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(removeFromCartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(shoppingCartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shoppingCartPanelLayout.createSequentialGroup()
                        .addComponent(grandTotalTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalAfterTaxLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shoppingCartPanelLayout.createSequentialGroup()
                        .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalDiscountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(taxAmountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(subtotalLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        shoppingCartPanelLayout.setVerticalGroup(
            shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shoppingCartPanelLayout.createSequentialGroup()
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(shoppingCartPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ShoppingCartLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeFromCartButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subtotalLabel)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalDiscountLabel)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taxAmountLabel)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(shoppingCartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalAfterTaxLabel)
                    .addComponent(grandTotalTextLabel)))
        );

        storeInfoTextLabel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        storeInfoTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        storeInfoTextLabel.setText("<html><b><u>This Store:</u></b> <br />Mega City One<br /> 7301 Melrose Ave.<br /> Los Angeles, CA 90046<br /> (323) 934-3373<br /><br  /> megacity.one | info@megacity.one </html>");
        storeInfoTextLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                storeInfoTextLabelFocusGained(evt);
            }
        });
        storeInfoTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                storeInfoTextLabelMouseEntered(evt);
            }
        });
        storeInfoTextLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                storeInfoTextLabelPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JagoPOSHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(storeInfoTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SettingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NewProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NewSaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addComponent(centralSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(shoppingCartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shoppingCartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JagoPOSHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerTabbedPane)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(storeInfoTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(centralSearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(NewProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(NewSaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CheckOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SettingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))))
        );

        customerTabbedPane.getAccessibleContext().setAccessibleName("Guest");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemSearchBarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchBarTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemSearchBarTextFieldActionPerformed

    private void addToCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartButtonActionPerformed
        boolean modelSet = false;
        double taxRate = _mainSession.getTaxRate()/100;
        String taxname = _mainSession.getTaxName();
        
        switch(_mainSession.getCurrency()){
            case 0:
                _currencySymbol = "$";
                break;
            case 1:
                _currencySymbol = "€";
                break;
            case 2:
                _currencySymbol = "£";
                break;
            case 3:
                _currencySymbol = "¥";
                break;
            default:
                _currencySymbol = "$";
                break;
        }
        
        if(!modelSet){
            shoppingCartTable.setModel(shoppingCartModel);
            modelSet = true;
        }
        
        int row = mainSearchTable.getSelectedRow();
        double runningSubtotal = 0;
        Vector<Vector<Object>> shoppingCartAddRow = new Vector<>();
        Vector<Object> rowData = new Vector<>();

        
        shoppingCartAddRow.add(rowData);

        removeFromCartButton.setEnabled(true);
        
        //***********IMPORTANT: ALSO ADD TO SESSION PRODUCTS ARRAYLIST LATER************
        
        if (row > -1) {
                
                rowData.add(mainSearchTable.getValueAt(row, 1));
                rowData.add(1);
                rowData.add(Double.parseDouble(mainSearchTable.getValueAt(row, 3).toString()));
                
                shoppingCartModel.addRow(rowData);
        }
        
        for(int i=0; i < shoppingCartTable.getRowCount(); i++){
            runningSubtotal += Double.parseDouble(shoppingCartTable.getValueAt(i, 2).toString());
        }
        
        _mainSession.setRunningTotal((runningSubtotal*taxRate)+runningSubtotal);
        
        taxAmountLabel.setText(""+_currencySymbol+""+dollarAmountFormatter.format(runningSubtotal*taxRate));
        subtotalLabel.setText(""+_currencySymbol+""+dollarAmountFormatter.format(runningSubtotal));
        totalDiscountLabel.setText(_currencySymbol+"0.00");
        totalAfterTaxLabel.setText(""+_currencySymbol+""+dollarAmountFormatter.format((runningSubtotal*taxRate)+runningSubtotal));
        
    }//GEN-LAST:event_addToCartButtonActionPerformed

    private void SearchDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDatabaseButtonActionPerformed
        boolean modelSet = false;
        if(!modelSet){
            mainSearchTable.setModel(searchProductTableModel);
            modelSet = true;
        }
        
        String searchCriteria = itemSearchBarTextField.getText();
        boolean isProduct = ProductSearchRadioButton.isSelected();
        searchProductTableModel.setRowCount(0);
        ArrayList<Product> productResults = null;
        addToCartButton.setEnabled(true);
        editItemButton.setEnabled(true);
        ArrayList<Invoice> invoiceResults = null;
        
        if(isProduct){
            
            try {
                
                productResults = _mainSession.searchProductDatabase(searchCriteria);
                
            } catch (SQLException ex) {
                //Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex.getMessage());
            }
            
        }else{
            
            try {
                invoiceResults = _mainSession.searchInvoiceDatabase(searchCriteria);
            } catch (SQLException ex) {
                //Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex.getMessage());
            }
            
        }
        
        if(productResults.size() <= 0){
            Object[] result = {"", "No Results.", "", ""};
            searchProductTableModel.addRow(result);
        }else{
            for (int i=0; i < productResults.size(); i++){
                Object[] result = {productResults.get(i).getUPC(), productResults.get(i).getDescription(), 
                                   productResults.get(i).getInventory(), dollarAmountFormatter.format(productResults.get(i).getPrice())};
                searchProductTableModel.addRow(result);
            }
        }
        
        
    }//GEN-LAST:event_SearchDatabaseButtonActionPerformed

    private void invoiceSearchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceSearchRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceSearchRadioButtonActionPerformed

    private void editItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemButtonActionPerformed
        
        long productUPC = 0;
        Product product = new Product();
        ProductCard productEditCard = new ProductCard(true);
        productEditCard.setHeaderText("Product Detail");
        ResultSet retrievedProductResultSet = null;
        int row = mainSearchTable.getSelectedRow();
        
        if (row > -1) {
            productUPC = Long.parseLong(searchProductTableModel.getValueAt(row, 0).toString());
        }
        
        try {
            retrievedProductResultSet = product.retrieveProduct(productUPC);
            retrievedProductResultSet.next();
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: "+ex.getMessage());
        }

        try {
            productEditCard.populateCard(retrievedProductResultSet);
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        
        productEditCard.setVisible(true);
        
    }//GEN-LAST:event_editItemButtonActionPerformed

    private void ProductSearchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductSearchRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductSearchRadioButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void CheckOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckOutButtonActionPerformed
        CustomerTenderedUI payInvoice = new CustomerTenderedUI(_mainSession.getRunningTotal(), _mainSession.getCurrency());
        payInvoice.setVisible(true);
    }//GEN-LAST:event_CheckOutButtonActionPerformed

    private void guestAddCustomerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestAddCustomerNameTextFieldActionPerformed
    
    }//GEN-LAST:event_guestAddCustomerNameTextFieldActionPerformed

    private void attachCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachCustomerButtonActionPerformed
        int row = customerSearchTable.getSelectedRow();
        long customerID = 0;
        
        Customer customer = new Customer(true);
        
        CustomerCard customerEditCard = new CustomerCard(true);
        ResultSet retrievedCustomerResultSet = null;
        
        if(row > -1){
            customerID = Long.parseLong(searchCustomerTableModel.getValueAt(row, 0).toString());
            
            try {
                retrievedCustomerResultSet = customer.retrieveCustomer(customerID);
                retrievedCustomerResultSet.next();
            } catch (SQLException ex) {
                Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("ERROR: "+ex.getMessage());
            }
            
            customerTabbedPane.setTitleAt(0, customerSearchTable.getValueAt(row, 1).toString());
            guestAddCustomerNameTextField.setVisible(false);
            phoneNumberAddCustomerTextField.setVisible(false);
            nameCustomerAddTextLabel.setVisible(false);
            phoneCustomerAddTextLabel.setVisible(false);
            optionalTextLabel.setVisible(false);
            addCustomerGuestButton.setVisible(false);
            clearCustomerButton.setVisible(true);
            customerNameLargeHeading.setText(customerSearchTable.getValueAt(row, 1).toString());
            try {
                guestReminderTextLabel.setText("<html><b>E-mail Address</b>: "+retrievedCustomerResultSet.getString(5)+"<br /><b>Phone #</b>: "+retrievedCustomerResultSet.getString(4)+"<br /><b>Postal Code</b>: "+retrievedCustomerResultSet.getString(2)+"");
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            customerTabbedPane.setSelectedIndex(0);
            
        }
    }//GEN-LAST:event_attachCustomerButtonActionPerformed

    private void customerSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerSearchTextFieldActionPerformed

    private void editCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCustomerButtonActionPerformed
        long customerID = 0;
        
        Customer customer = new Customer(true);
        
        CustomerCard customerEditCard = new CustomerCard(true);
        ResultSet retrievedCustomerResultSet = null;
        
        int row = customerSearchTable.getSelectedRow();
        
        if (row > -1) {
            customerID = Long.parseLong(searchCustomerTableModel.getValueAt(row, 0).toString());
        }
        
        try {
            retrievedCustomerResultSet = customer.retrieveCustomer(customerID);
            retrievedCustomerResultSet.next();
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: "+ex.getMessage());
        }

        try {
            customerEditCard.populateCard(retrievedCustomerResultSet);
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        
        customerEditCard.setVisible(true);
        
    }//GEN-LAST:event_editCustomerButtonActionPerformed

    private void SettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsButtonActionPerformed
        SettingsPanel settingsPanel = null;
        try{
            settingsPanel = new SettingsPanel();
        }catch(IOException e){
            
            System.exit(0);
        }catch(ClassNotFoundException e){
            System.exit(1);
        }
        settingsPanel.setVisible(true);
    }//GEN-LAST:event_SettingsButtonActionPerformed

    private void storeInfoTextLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_storeInfoTextLabelFocusGained
        
    }//GEN-LAST:event_storeInfoTextLabelFocusGained

    private void storeInfoTextLabelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_storeInfoTextLabelPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_storeInfoTextLabelPropertyChange

    private void storeInfoTextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_storeInfoTextLabelMouseEntered
        
    }//GEN-LAST:event_storeInfoTextLabelMouseEntered

    private void NewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewProductButtonActionPerformed
        ProductCard newProduct = new ProductCard();
        newProduct.setHeaderText("New Product");
        newProduct.setVisible(true);
    }//GEN-LAST:event_NewProductButtonActionPerformed

    private void addCustomerGuestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerGuestButtonActionPerformed
        Customer newCustomer = null;
        String name = guestAddCustomerNameTextField.getText(), phoneNumber = phoneNumberAddCustomerTextField.getText();
        if(name.length() == 0 && phoneNumber.length() == 0){
        } else {
            try {
                newCustomer = new Customer(name, phoneNumber);
            } catch (SQLException ex) {
                Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            CustomerCard newCustomerCard = new CustomerCard(newCustomer, true);
            newCustomerCard.setVisible(true);
            guestAddCustomerNameTextField.setText("");
            phoneNumberAddCustomerTextField.setText("");
        }
    }//GEN-LAST:event_addCustomerGuestButtonActionPerformed

    private void itemSearchBarTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSearchBarTextFieldMouseClicked
        itemSearchBarTextField.setText("");
    }//GEN-LAST:event_itemSearchBarTextFieldMouseClicked

    private void itemSearchBarTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemSearchBarTextFieldKeyTyped
        
        if(evt.getKeyChar() == '\n'){
            
            SearchDatabaseButton.doClick(0);
            
        }
    }//GEN-LAST:event_itemSearchBarTextFieldKeyTyped

    private void removeFromCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromCartButtonActionPerformed
        double workingTotal=0, removedItemPrice=0, subTotal;
        String currencySymbol;
        int row = shoppingCartTable.getSelectedRow();
        
        if (row > -1){
            workingTotal = _mainSession.getRunningTotal();
            removedItemPrice = Double.parseDouble(shoppingCartTable.getValueAt(row, 2).toString());
            shoppingCartModel.removeRow(row);
        }
        switch(_mainSession.getCurrency()){
            case 0:
                currencySymbol = "$";
                break;
            case 1:
                currencySymbol = "€";
                break;
            case 2:
                currencySymbol = "£";
                break;
            case 3:
                currencySymbol = "¥";
                break;
            default:
                currencySymbol = "$";
                break;
        }
        
        subTotal = workingTotal / ((_mainSession.getTaxRate()/100)+1);
        subTotal -= removedItemPrice;
        taxAmountLabel.setText(""+currencySymbol+""+dollarAmountFormatter.format(Math.abs(subTotal*(_mainSession.getTaxRate()/100))));
        subtotalLabel.setText(""+currencySymbol+""+dollarAmountFormatter.format(Math.abs(subTotal)));
        totalDiscountLabel.setText(currencySymbol+"0.00");
        totalAfterTaxLabel.setText(""+currencySymbol+""+dollarAmountFormatter.format(Math.abs((subTotal*_mainSession.getTaxRate()/100)+subTotal)));
        _mainSession.setRunningTotal((subTotal*_mainSession.getTaxRate()/100)+subTotal);
        if(shoppingCartModel.getRowCount() == 0){
            removeFromCartButton.setEnabled(false);
        }
    }//GEN-LAST:event_removeFromCartButtonActionPerformed

    private void customerSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchButtonActionPerformed
        String searchCriteria = customerSearchTextField.getText();
        boolean modelSet = false;
        if(!modelSet){
            customerSearchTable.setModel(searchCustomerTableModel);
            modelSet = true;
        }
        attachCustomerButton.setEnabled(true);
        editCustomerButton.setEnabled(true);
        searchCustomerTableModel.setRowCount(0);
        ArrayList<Customer> customerResults = null;

        try {
                
            customerResults = _mainSession.searchCustomerDatabase(searchCriteria);
                
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
            
        if(customerResults.size() <= 0){
            Object[] result = {"", "No Results.", ""};
            searchCustomerTableModel.addRow(result);
        }else{
            for (int i=0; i < customerResults.size(); i++){
                if (customerResults.get(i).getCustomerID() != 1){
                    Object[] result = {customerResults.get(i).getCustomerID(), customerResults.get(i).getName(), customerResults.get(i).getPostalCode()};
                    searchCustomerTableModel.addRow(result);
                }
            }
        }
        
        
    }//GEN-LAST:event_customerSearchButtonActionPerformed

    private void phoneNumberAddCustomerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberAddCustomerTextFieldActionPerformed
        
    }//GEN-LAST:event_phoneNumberAddCustomerTextFieldActionPerformed

    private void guestAddCustomerNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestAddCustomerNameTextFieldKeyPressed
        addCustomerGuestButton.setEnabled(true);

    }//GEN-LAST:event_guestAddCustomerNameTextFieldKeyPressed

    private void phoneNumberAddCustomerTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberAddCustomerTextFieldKeyPressed
        addCustomerGuestButton.setEnabled(true);
    }//GEN-LAST:event_phoneNumberAddCustomerTextFieldKeyPressed

    private void customerSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerSearchTextFieldKeyTyped
        if(evt.getKeyChar() == '\n'){
            
            customerSearchButton.doClick(0);
            
        }
    }//GEN-LAST:event_customerSearchTextFieldKeyTyped

    private void customerSearchTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerSearchTextFieldMouseClicked
        customerSearchTextField.setText("");
    }//GEN-LAST:event_customerSearchTextFieldMouseClicked

    private void NewSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewSaleButtonActionPerformed
        clearCustomer();
        itemSearchBarTextField.setText("");
        customerSearchTextField.setText("");
        taxAmountLabel.setText(_currencySymbol+"0.00");
        subtotalLabel.setText(_currencySymbol+"0.00");
        totalDiscountLabel.setText(_currencySymbol+"0.00");
        totalAfterTaxLabel.setText(_currencySymbol+"0.00");
        searchProductTableModel.setRowCount(0);
        searchCustomerTableModel.setRowCount(0);
        shoppingCartModel.setRowCount(0);
        addCustomerGuestButton.setEnabled(false);
        addToCartButton.setEnabled(false);
        editItemButton.setEnabled(false);
        removeFromCartButton.setEnabled(false);
        attachCustomerButton.setEnabled(false);
        editCustomerButton.setEnabled(false);
    }//GEN-LAST:event_NewSaleButtonActionPerformed

    private void clearCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCustomerButtonActionPerformed
        // return everything to guest...
            clearCustomer();
    }//GEN-LAST:event_clearCustomerButtonActionPerformed

    private void guestAddCustomerNameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestAddCustomerNameTextFieldKeyReleased
        if(phoneNumberAddCustomerTextField.getText() == "" && guestAddCustomerNameTextField.getText() == ""){
            addCustomerGuestButton.setEnabled(false);
        }
    }//GEN-LAST:event_guestAddCustomerNameTextFieldKeyReleased
    private void clearCustomer(){
            customerTabbedPane.setTitleAt(0, "Guest");
            guestAddCustomerNameTextField.setVisible(true);
            phoneNumberAddCustomerTextField.setVisible(true);
            nameCustomerAddTextLabel.setVisible(true);
            phoneCustomerAddTextLabel.setVisible(true);
            optionalTextLabel.setVisible(true);
            addCustomerGuestButton.setVisible(true);
            clearCustomerButton.setVisible(false);
            customerNameLargeHeading.setText("Guest");
            guestReminderTextLabel.setText("Always Thank Customers For Their Business!");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                
                try{
                    
                    new MainWindowUI().setVisible(true);
                    
                }catch(IOException e){
                    System.out.println("File opening failed. Program Terminated.");
                    System.exit(69);
                }catch(ClassNotFoundException e1){
                    System.out.println("File opening failed. Program Terminated.");
                    System.exit(70);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckOutButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel JagoPOSHeader;
    private javax.swing.JButton NewProductButton;
    private javax.swing.JButton NewSaleButton;
    private javax.swing.JRadioButton ProductSearchRadioButton;
    private javax.swing.JButton SearchDatabaseButton;
    private javax.swing.ButtonGroup SearchSelectorButtonGroup;
    private javax.swing.JButton SettingsButton;
    private javax.swing.JLabel ShoppingCartLabel;
    private javax.swing.JLabel WithSelectedItemsLabel;
    private javax.swing.JButton addCustomerGuestButton;
    private javax.swing.JButton addToCartButton;
    private javax.swing.JButton attachCustomerButton;
    private javax.swing.JPanel centralSearchPanel;
    private javax.swing.JButton clearCustomerButton;
    private javax.swing.JPanel clockPanel;
    private javax.swing.JLabel customerNameLargeHeading;
    private javax.swing.JButton customerSearchButton;
    private javax.swing.JTable customerSearchTable;
    private javax.swing.JTextField customerSearchTextField;
    private javax.swing.JTabbedPane customerTabbedPane;
    private javax.swing.JButton editCustomerButton;
    private javax.swing.JButton editItemButton;
    private javax.swing.JLabel grandTotalTextLabel;
    private javax.swing.JTextField guestAddCustomerNameTextField;
    private javax.swing.JLabel guestReminderTextLabel;
    private javax.swing.JRadioButton invoiceSearchRadioButton;
    private javax.swing.JTextField itemSearchBarTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable mainSearchTable;
    private javax.swing.JLabel nameCustomerAddTextLabel;
    private javax.swing.JLabel optionalTextLabel;
    private javax.swing.JLabel phoneCustomerAddTextLabel;
    private javax.swing.JTextField phoneNumberAddCustomerTextField;
    private javax.swing.JButton removeFromCartButton;
    private javax.swing.JLabel searchTextLabel;
    private javax.swing.JPanel shoppingCartPanel;
    private javax.swing.JTable shoppingCartTable;
    private javax.swing.JLabel storeInfoTextLabel;
    private javax.swing.JLabel subtotalLabel;
    private javax.swing.JLabel taxAmountLabel;
    private javax.swing.JLabel totalAfterTaxLabel;
    private javax.swing.JLabel totalDiscountLabel;
    // End of variables declaration//GEN-END:variables
}
